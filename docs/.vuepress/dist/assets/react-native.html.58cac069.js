import{_ as p,r as o,o as c,c as i,a,b as e,F as l,e as t,d as n}from"./app.28f6b3e6.js";const r={},u=t(`<h1 id="react-native-dan-solana" tabindex="-1"><a class="header-anchor" href="#react-native-dan-solana" aria-hidden="true">#</a> React Native dan Solana</h1><p>React Native adalah kerangka kerja perangkat lunak UI sumber terbuka yang digunakan untuk mengembangkan aplikasi mobile, web, dan desktop dengan memungkinkan pengembang menggunakan kerangka kerja React bersama dengan kemampuan platform native. Didukung dengan Solana SDK, ini adalah platform hebat untuk dengan cepat membangun aplikasi Crypto native yang berkinerja baik.</p><p>Cara tercepat untuk memulai dengan React Native dan Solana adalah dengan menggunakan <a href="#solana-dapp-scaffold-for-react-native">Solana DApp Scaffold untuk React Native</a>.</p><h2 id="cara-pakai-solana-web3-js-di-react-native-app" tabindex="-1"><a class="header-anchor" href="#cara-pakai-solana-web3-js-di-react-native-app" aria-hidden="true">#</a> Cara Pakai @solana/web3.js di React Native app</h2><p>Dalam tutorial ini Anda akan belajar cara membuat aplikasi React Native baru dan menginstal dan mengonfigurasi SDK <code>@solana/web3.js</code>, dan dependensinya.</p><p>Jika Anda sudah memiliki aplikasi, lewati ke <a href="#install-dependencies">instalasi dependensi</a>.</p><h3 id="buat-aplikasi-baru" tabindex="-1"><a class="header-anchor" href="#buat-aplikasi-baru" aria-hidden="true">#</a> Buat aplikasi baru</h3><p>Kita memulai aplikasi React Native baru yang menggunakan TypeScript, lalu <code>cd</code> ke direktori proyek, di mana kita akan mengeksekusi sisa perintah.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>npx react-native init SolanaReactNative --template react-native-template-typescript
<span class="token builtin class-name">cd</span> SolanaReactNative
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="install-dependensi" tabindex="-1"><a class="header-anchor" href="#install-dependensi" aria-hidden="true">#</a> Install dependensi</h3><p>Selanjutnya, kita menginstal dependensi. kita menginstal Solana SDK, dan sebagai tambahan kita menginstal sebuah paket untuk menambal konfigurasi <code>metro</code>, dan dua polyfill yang menambal lingkungan React Native.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> @solana/web3.js metro-config react-native-get-random-values react-native-url-polyfill
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="update-index-js" tabindex="-1"><a class="header-anchor" href="#update-index-js" aria-hidden="true">#</a> Update <code>index.js</code></h3><p>Untuk load polyfills, kita buka file <code>index.js</code> di root proyek dan tambahkan 2 baris berikut di bagian paling atas file:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&#39;react-native-get-random-values&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&#39;react-native-url-polyfill/auto&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="update-metro-config-js" tabindex="-1"><a class="header-anchor" href="#update-metro-config-js" aria-hidden="true">#</a> Update <code>metro.config.js</code></h3><p>Di step ini, kita akan konfigurasi <code>metro</code>, jadi ini akan load files dengan ekstensi <code>cjs</code>.</p><p>Buka file <code>metro.config.js</code> root proyek dan replace isinya dengan snippet berikut:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span>getDefaultConfig<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;metro-config&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">resolver</span><span class="token operator">:</span> <span class="token punctuation">{</span>sourceExts<span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getDefaultConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">transformer</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">getTransformOptions</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">experimentalImportSupport</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
          <span class="token literal-property property">inlineRequires</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">resolver</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">sourceExts</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>sourceExts<span class="token punctuation">,</span> <span class="token string">&#39;cjs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;svg&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="update-app-tsx" tabindex="-1"><a class="header-anchor" href="#update-app-tsx" aria-hidden="true">#</a> Update <code>App.tsx</code></h3><p>Mari tambahkan web3.js ke contoh aplikasi kita!</p><p>Buka file <code>App.tsx</code> dan tambahkan code berikut di dalam fungsi <code>App</code>:</p><p>Dalam contoh ini, kita menyiapkan koneksi ke Solana Devnet dan ketika komponen dimuat, kita mendapatkan versi cluster yang kita hubungkan dan menyimpan versi dalam status komponen.</p><p>Selain itu, contoh ini menunjukkan cara membuat dan menyimpan keypair.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> conn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Connection</span><span class="token punctuation">(</span><span class="token function">clusterApiUrl</span><span class="token punctuation">(</span><span class="token string">&#39;devnet&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>version<span class="token punctuation">,</span> setVersion<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>keypair<span class="token punctuation">,</span> setKeypair<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span>Keypair<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Keypair<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">randomKeypair</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setKeypair</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Keypair<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>version<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  conn<span class="token punctuation">.</span><span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>r <span class="token operator">=&gt;</span> <span class="token function">setVersion</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>version<span class="token punctuation">,</span> setVersion<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>Terakhir, di dalam template (atau <code>render function</code>) tambahkan markup berikut:</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token punctuation">{</span>version <span class="token operator">?</span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Section</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Version<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>version<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Section</span></span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span>keypair <span class="token operator">?</span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Section</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Keypair<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>keypair<span class="token operator">?.</span>publicKey<span class="token operator">?.</span><span class="token function">toBase58</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Section</span></span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">}</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>New Keypair<span class="token punctuation">&quot;</span></span> <span class="token attr-name">onPress</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>randomKeypair<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="install-cocoapods" tabindex="-1"><a class="header-anchor" href="#install-cocoapods" aria-hidden="true">#</a> Install cocoapods</h3><p>Agar polyfills bisa berfungsi, kita harus install <code>cocoapods</code>.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ios <span class="token operator">&amp;&amp;</span> pod <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="start-aplikasi" tabindex="-1"><a class="header-anchor" href="#start-aplikasi" aria-hidden="true">#</a> Start aplikasi</h3><p>Setelah semua selesai, kita bisa start aplikasi kita:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>npx react-native run-ios
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Jika semuanya berjalan dengan baik, Anda akan melihat aplikasi React Native sedang dimulai di simulator iOS Anda yang mengambil versi Solana Devnet.</p><h2 id="solana-dapp-scaffold-untuk-react-native" tabindex="-1"><a class="header-anchor" href="#solana-dapp-scaffold-untuk-react-native" aria-hidden="true">#</a> Solana DApp Scaffold untuk React Native</h2>`,35),k=n("Jika Anda ingin memulai, Anda dapat mengunduh "),d={href:"https://github.com/solana-developers/dapp-scaffold-react-native",target:"_blank",rel:"noopener noreferrer"},m=n("Solana DApp Scaffold untuk React Native"),b=n("."),g=a("h2",{id:"isu-umum-ketika-menggunakan-solana-web3-js-di-aplikasi-react-native",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#isu-umum-ketika-menggunakan-solana-web3-js-di-aplikasi-react-native","aria-hidden":"true"},"#"),n(" Isu Umum ketika menggunakan @solana/web3.js di aplikasi React Native")],-1),h=a("h3",{id:"error-while-trying-to-resolve-module-superstruct-from-file",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#error-while-trying-to-resolve-module-superstruct-from-file","aria-hidden":"true"},"#"),n(" Error: While trying to resolve module superstruct from file")],-1),f=a("blockquote",null,[a("p",null,"error: Error: While trying to resolve module superstruct from file .../SolanaReactNative/node_modules/@solana/web3.js/lib/index.browser.cjs.js, the package .../SolanaReactNative/node_modules/superstruct/package.json was successfully found. However, this package itself specifies a main module field that could not be resolved (.../SolanaReactNative/node_modules/superstruct/lib/index.cjs.")],-1),v=n("Ini adalah masalah karena "),y=a("code",null,"metro",-1),x=n(", bundler React Native, tidak mendukung ekstensi "),_=a("code",null,"cjs",-1),j=n(" secara default. ada "),w={href:"https://github.com/facebook/metro/issues/535",target:"_blank",rel:"noopener noreferrer"},S=n("issue disini"),R=n("."),N=t(`<p>Anda dapat memperbaikinya dengan memperbarui <code>metro.config.js</code> dan menambahkan <code>cjs</code> ke array <code>resolver.sourceExts</code>, seperti yang ditunjukkan di atas.</p><h3 id="error-url-protocol-is-not-implemented" tabindex="-1"><a class="header-anchor" href="#error-url-protocol-is-not-implemented" aria-hidden="true">#</a> Error: URL.protocol is not implemented</h3><pre><code>ERROR Error: URL.protocol is not implemented 
ERROR Invariant Violation: Module AppRegistry is not a registered callable module (calling runApplication). A frequent cause of the error is that the application entry file path is incorrect. This can also happen when the JS bundle is corrupt or there is an early initialization error when loading React Native. 
</code></pre><p>Ini adalah masalah yang dapat diperbaiki dengan menggunakan polyfill untuk objek <code>URL</code> di React Native.</p><p>Instal paket <code>react-native-url-polyfill</code> dan impor dalam file utama aplikasi Anda (misalnya: <code>index.js</code>), seperti yang ditunjukkan di atas.</p><h3 id="error-crypto-getrandomvalues-not-supported" tabindex="-1"><a class="header-anchor" href="#error-crypto-getrandomvalues-not-supported" aria-hidden="true">#</a> Error: crypto.getRandomValues() not supported</h3><pre><code>Error: crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported
</code></pre><p>Ini adalah masalah yang dapat diperbaiki dengan menggunakan polyfill untuk objek <code>crypto</code> di React Native.</p><p>Instal paket <code>react-native-get-random-values</code> dan impor dalam file utama aplikasi Anda (misalnya: <code>index.js</code>), seperti yang ditunjukkan.</p>`,9);function A(E,D){const s=o("ExternalLinkIcon");return c(),i(l,null,[u,a("p",null,[k,a("a",d,[m,e(s)]),b]),g,h,f,a("p",null,[v,y,x,_,j,a("a",w,[S,e(s)]),R]),N],64)}var q=p(r,[["render",A]]);export{q as default};
